#include <vector>
#include <iostream>
#include "solution.h"
#include "gtest/gtest.h"

using namespace std;

int main()
{
    testing::InitGoogleTest();

    return RUN_ALL_TESTS();
}

TEST(Generate_Tree_From_Vector, empty_case)
{
    // arrange
    vector<int> input;
    TreeNode* expected = nullptr;
    
    //run
    auto output = generateTreeFromVector(input);

    //assert
    EXPECT_EQ(output, expected);
}

TEST(Generate_Tree_From_Vector, general_case)
{
    // arrange
    vector<int> input = {1, 2, 3};
    TreeNode* expected = new TreeNode(1);
    expected->left = new TreeNode(2);
    expected->right = new TreeNode(3);

    //run
    auto output = generateTreeFromVector(input);

    //assert
    EXPECT_TRUE(*output == *expected);
}

TEST(Generate_Tree_From_Vector, right_children_only)
{
    // arrange
    vector<int> input = {1, INT32_MIN, 2, INT32_MIN, 3};
    TreeNode* expected = new TreeNode(1);
    expected->right = new TreeNode(2);
    expected->right->right = new TreeNode(3);

    //run
    auto output = generateTreeFromVector(input);

    //assert
    EXPECT_TRUE(*output == *expected);
}

TEST(Serialize_And_Deserialize_Binary_Tree, empty_tree_case)
{
    // arrange
    vector<int> inputVector;
    TreeNode* inputNode = generateTreeFromVector(inputVector);
    Codec s;

    //run
    auto serialized = s.serialize(inputNode);
    auto deserialized = s.deserialize(serialized);

    EXPECT_EQ(deserialized, nullptr);
}

TEST(Serialize_And_Deserialize_Binary_Tree, general_case)
{
    // arrange
    vector<int> inputVector = {1,2,3,INT32_MIN,INT32_MIN,4,5};
    TreeNode* inputNode = generateTreeFromVector(inputVector);
    Codec s;

    //run
    auto serialized = s.serialize(inputNode);
    auto deserialized = s.deserialize(serialized);

    EXPECT_TRUE(*deserialized == *inputNode);
}

TEST(Serialize_And_Deserialize_Binary_Tree, big_case)
{
    // arrange
    vector<int> inputVector = {1,INT32_MIN,2,INT32_MIN,3,INT32_MIN,4,INT32_MIN,5,INT32_MIN,6,INT32_MIN,7,INT32_MIN,8,INT32_MIN,9,INT32_MIN,10,INT32_MIN,11,INT32_MIN,12,INT32_MIN,13,INT32_MIN,14,INT32_MIN,15,INT32_MIN,16,INT32_MIN,17,INT32_MIN,18,INT32_MIN,19,INT32_MIN,20,INT32_MIN,21,INT32_MIN,22,INT32_MIN,23,INT32_MIN,24,INT32_MIN,25,INT32_MIN,26,INT32_MIN,27,INT32_MIN,28,INT32_MIN,29,INT32_MIN,30,INT32_MIN,31,INT32_MIN,32,INT32_MIN,33,INT32_MIN,34,INT32_MIN,35,INT32_MIN,36,INT32_MIN,37,INT32_MIN,38,INT32_MIN,39,INT32_MIN,40,INT32_MIN,41,INT32_MIN,42,INT32_MIN,43,INT32_MIN,44,INT32_MIN,45,INT32_MIN,46,INT32_MIN,47,INT32_MIN,48,INT32_MIN,49,INT32_MIN,50,INT32_MIN,51,INT32_MIN,52,INT32_MIN,53,INT32_MIN,54,INT32_MIN,55,INT32_MIN,56,INT32_MIN,57,INT32_MIN,58,INT32_MIN,59,INT32_MIN,60,INT32_MIN,61,INT32_MIN,62,INT32_MIN,63,INT32_MIN,64,INT32_MIN,65,INT32_MIN,66,INT32_MIN,67,INT32_MIN,68,INT32_MIN,69,INT32_MIN,70,INT32_MIN,71,INT32_MIN,72,INT32_MIN,73,INT32_MIN,74,INT32_MIN,75,INT32_MIN,76,INT32_MIN,77,INT32_MIN,78,INT32_MIN,79,INT32_MIN,80,INT32_MIN,81,INT32_MIN,82,INT32_MIN,83,INT32_MIN,84,INT32_MIN,85,INT32_MIN,86,INT32_MIN,87,INT32_MIN,88,INT32_MIN,89,INT32_MIN,90,INT32_MIN,91,INT32_MIN,92,INT32_MIN,93,INT32_MIN,94,INT32_MIN,95,INT32_MIN,96,INT32_MIN,97,INT32_MIN,98,INT32_MIN,99,INT32_MIN,100,INT32_MIN,101,INT32_MIN,102,INT32_MIN,103,INT32_MIN,104,INT32_MIN,105,INT32_MIN,106,INT32_MIN,107,INT32_MIN,108,INT32_MIN,109,INT32_MIN,110,INT32_MIN,111,INT32_MIN,112,INT32_MIN,113,INT32_MIN,114,INT32_MIN,115,INT32_MIN,116,INT32_MIN,117,INT32_MIN,118,INT32_MIN,119,INT32_MIN,120,INT32_MIN,121,INT32_MIN,122,INT32_MIN,123,INT32_MIN,124,INT32_MIN,125,INT32_MIN,126,INT32_MIN,127,INT32_MIN,128,INT32_MIN,129,INT32_MIN,130,INT32_MIN,131,INT32_MIN,132,INT32_MIN,133,INT32_MIN,134,INT32_MIN,135,INT32_MIN,136,INT32_MIN,137,INT32_MIN,138,INT32_MIN,139,INT32_MIN,140,INT32_MIN,141,INT32_MIN,142,INT32_MIN,143,INT32_MIN,144,INT32_MIN,145,INT32_MIN,146,INT32_MIN,147,INT32_MIN,148,INT32_MIN,149,INT32_MIN,150,INT32_MIN,151,INT32_MIN,152,INT32_MIN,153,INT32_MIN,154,INT32_MIN,155,INT32_MIN,156,INT32_MIN,157,INT32_MIN,158,INT32_MIN,159,INT32_MIN,160,INT32_MIN,161,INT32_MIN,162,INT32_MIN,163,INT32_MIN,164,INT32_MIN,165,INT32_MIN,166,INT32_MIN,167,INT32_MIN,168,INT32_MIN,169,INT32_MIN,170,INT32_MIN,171,INT32_MIN,172,INT32_MIN,173,INT32_MIN,174,INT32_MIN,175,INT32_MIN,176,INT32_MIN,177,INT32_MIN,178,INT32_MIN,179,INT32_MIN,180,INT32_MIN,181,INT32_MIN,182,INT32_MIN,183,INT32_MIN,184,INT32_MIN,185,INT32_MIN,186,INT32_MIN,187,INT32_MIN,188,INT32_MIN,189,INT32_MIN,190,INT32_MIN,191,INT32_MIN,192,INT32_MIN,193,INT32_MIN,194,INT32_MIN,195,INT32_MIN,196,INT32_MIN,197,INT32_MIN,198,INT32_MIN,199,INT32_MIN,200,INT32_MIN,201,INT32_MIN,202,INT32_MIN,203,INT32_MIN,204,INT32_MIN,205,INT32_MIN,206,INT32_MIN,207,INT32_MIN,208,INT32_MIN,209,INT32_MIN,210,INT32_MIN,211,INT32_MIN,212,INT32_MIN,213,INT32_MIN,214,INT32_MIN,215,INT32_MIN,216,INT32_MIN,217,INT32_MIN,218,INT32_MIN,219,INT32_MIN,220,INT32_MIN,221,INT32_MIN,222,INT32_MIN,223,INT32_MIN,224,INT32_MIN,225,INT32_MIN,226,INT32_MIN,227,INT32_MIN,228,INT32_MIN,229,INT32_MIN,230,INT32_MIN,231,INT32_MIN,232,INT32_MIN,233,INT32_MIN,234,INT32_MIN,235,INT32_MIN,236,INT32_MIN,237,INT32_MIN,238,INT32_MIN,239,INT32_MIN,240,INT32_MIN,241,INT32_MIN,242,INT32_MIN,243,INT32_MIN,244,INT32_MIN,245,INT32_MIN,246,INT32_MIN,247,INT32_MIN,248,INT32_MIN,249,INT32_MIN,250,INT32_MIN,251,INT32_MIN,252,INT32_MIN,253,INT32_MIN,254,INT32_MIN,255,INT32_MIN,256,INT32_MIN,257,INT32_MIN,258,INT32_MIN,259,INT32_MIN,260,INT32_MIN,261,INT32_MIN,262,INT32_MIN,263,INT32_MIN,264,INT32_MIN,265,INT32_MIN,266,INT32_MIN,267,INT32_MIN,268,INT32_MIN,269,INT32_MIN,270,INT32_MIN,271,INT32_MIN,272,INT32_MIN,273,INT32_MIN,274,INT32_MIN,275,INT32_MIN,276,INT32_MIN,277,INT32_MIN,278,INT32_MIN,279,INT32_MIN,280,INT32_MIN,281,INT32_MIN,282,INT32_MIN,283,INT32_MIN,284,INT32_MIN,285,INT32_MIN,286,INT32_MIN,287,INT32_MIN,288,INT32_MIN,289,INT32_MIN,290,INT32_MIN,291,INT32_MIN,292,INT32_MIN,293,INT32_MIN,294,INT32_MIN,295,INT32_MIN,296,INT32_MIN,297,INT32_MIN,298,INT32_MIN,299,INT32_MIN,300,INT32_MIN,301,INT32_MIN,302,INT32_MIN,303,INT32_MIN,304,INT32_MIN,305,INT32_MIN,306,INT32_MIN,307,INT32_MIN,308,INT32_MIN,309,INT32_MIN,310,INT32_MIN,311,INT32_MIN,312,INT32_MIN,313,INT32_MIN,314,INT32_MIN,315,INT32_MIN,316,INT32_MIN,317,INT32_MIN,318,INT32_MIN,319,INT32_MIN,320,INT32_MIN,321,INT32_MIN,322,INT32_MIN,323,INT32_MIN,324,INT32_MIN,325,INT32_MIN,326,INT32_MIN,327,INT32_MIN,328,INT32_MIN,329,INT32_MIN,330,INT32_MIN,331,INT32_MIN,332,INT32_MIN,333,INT32_MIN,334,INT32_MIN,335,INT32_MIN,336,INT32_MIN,337,INT32_MIN,338,INT32_MIN,339,INT32_MIN,340,INT32_MIN,341,INT32_MIN,342,INT32_MIN,343,INT32_MIN,344,INT32_MIN,345,INT32_MIN,346,INT32_MIN,347,INT32_MIN,348,INT32_MIN,349,INT32_MIN,350,INT32_MIN,351,INT32_MIN,352,INT32_MIN,353,INT32_MIN,354,INT32_MIN,355,INT32_MIN,356,INT32_MIN,357,INT32_MIN,358,INT32_MIN,359,INT32_MIN,360,INT32_MIN,361,INT32_MIN,362,INT32_MIN,363,INT32_MIN,364,INT32_MIN,365,INT32_MIN,366,INT32_MIN,367,INT32_MIN,368,INT32_MIN,369,INT32_MIN,370,INT32_MIN,371,INT32_MIN,372,INT32_MIN,373,INT32_MIN,374,INT32_MIN,375,INT32_MIN,376,INT32_MIN,377,INT32_MIN,378,INT32_MIN,379,INT32_MIN,380,INT32_MIN,381,INT32_MIN,382,INT32_MIN,383,INT32_MIN,384,INT32_MIN,385,INT32_MIN,386,INT32_MIN,387,INT32_MIN,388,INT32_MIN,389,INT32_MIN,390,INT32_MIN,391,INT32_MIN,392,INT32_MIN,393,INT32_MIN,394,INT32_MIN,395,INT32_MIN,396,INT32_MIN,397,INT32_MIN,398,INT32_MIN,399,INT32_MIN,400,INT32_MIN,401,INT32_MIN,402,INT32_MIN,403,INT32_MIN,404,INT32_MIN,405,INT32_MIN,406,INT32_MIN,407,INT32_MIN,408,INT32_MIN,409,INT32_MIN,410,INT32_MIN,411,INT32_MIN,412,INT32_MIN,413,INT32_MIN,414,INT32_MIN,415,INT32_MIN,416,INT32_MIN,417,INT32_MIN,418,INT32_MIN,419,INT32_MIN,420,INT32_MIN,421,INT32_MIN,422,INT32_MIN,423,INT32_MIN,424,INT32_MIN,425,INT32_MIN,426,INT32_MIN,427,INT32_MIN,428,INT32_MIN,429,INT32_MIN,430,INT32_MIN,431,INT32_MIN,432,INT32_MIN,433,INT32_MIN,434,INT32_MIN,435,INT32_MIN,436,INT32_MIN,437,INT32_MIN,438,INT32_MIN,439,INT32_MIN,440,INT32_MIN,441,INT32_MIN,442,INT32_MIN,443,INT32_MIN,444,INT32_MIN,445,INT32_MIN,446,INT32_MIN,447,INT32_MIN,448,INT32_MIN,449,INT32_MIN,450,INT32_MIN,451,INT32_MIN,452,INT32_MIN,453,INT32_MIN,454,INT32_MIN,455,INT32_MIN,456,INT32_MIN,457,INT32_MIN,458,INT32_MIN,459,INT32_MIN,460,INT32_MIN,461,INT32_MIN,462,INT32_MIN,463,INT32_MIN,464,INT32_MIN,465,INT32_MIN,466,INT32_MIN,467,INT32_MIN,468,INT32_MIN,469,INT32_MIN,470,INT32_MIN,471,INT32_MIN,472,INT32_MIN,473,INT32_MIN,474,INT32_MIN,475,INT32_MIN,476,INT32_MIN,477,INT32_MIN,478,INT32_MIN,479,INT32_MIN,480,INT32_MIN,481,INT32_MIN,482,INT32_MIN,483,INT32_MIN,484,INT32_MIN,485,INT32_MIN,486,INT32_MIN,487,INT32_MIN,488,INT32_MIN,489,INT32_MIN,490,INT32_MIN,491,INT32_MIN,492,INT32_MIN,493,INT32_MIN,494,INT32_MIN,495,INT32_MIN,496,INT32_MIN,497,INT32_MIN,498,INT32_MIN,499,INT32_MIN,500,INT32_MIN,501,INT32_MIN,502,INT32_MIN,503,INT32_MIN,504,INT32_MIN,505,INT32_MIN,506,INT32_MIN,507,INT32_MIN,508,INT32_MIN,509,INT32_MIN,510,INT32_MIN,511,INT32_MIN,512,INT32_MIN,513,INT32_MIN,514,INT32_MIN,515,INT32_MIN,516,INT32_MIN,517,INT32_MIN,518,INT32_MIN,519,INT32_MIN,520,INT32_MIN,521,INT32_MIN,522,INT32_MIN,523,INT32_MIN,524,INT32_MIN,525,INT32_MIN,526,INT32_MIN,527,INT32_MIN,528,INT32_MIN,529,INT32_MIN,530,INT32_MIN,531,INT32_MIN,532,INT32_MIN,533,INT32_MIN,534,INT32_MIN,535,INT32_MIN,536,INT32_MIN,537,INT32_MIN,538,INT32_MIN,539,INT32_MIN,540,INT32_MIN,541,INT32_MIN,542,INT32_MIN,543,INT32_MIN,544,INT32_MIN,545,INT32_MIN,546,INT32_MIN,547,INT32_MIN,548,INT32_MIN,549,INT32_MIN,550,INT32_MIN,551,INT32_MIN,552,INT32_MIN,553,INT32_MIN,554,INT32_MIN,555,INT32_MIN,556,INT32_MIN,557,INT32_MIN,558,INT32_MIN,559,INT32_MIN,560,INT32_MIN,561,INT32_MIN,562,INT32_MIN,563,INT32_MIN,564,INT32_MIN,565,INT32_MIN,566,INT32_MIN,567,INT32_MIN,568,INT32_MIN,569,INT32_MIN,570,INT32_MIN,571,INT32_MIN,572,INT32_MIN,573,INT32_MIN,574,INT32_MIN,575,INT32_MIN,576,INT32_MIN,577,INT32_MIN,578,INT32_MIN,579,INT32_MIN,580,INT32_MIN,581,INT32_MIN,582,INT32_MIN,583,INT32_MIN,584,INT32_MIN,585,INT32_MIN,586,INT32_MIN,587,INT32_MIN,588,INT32_MIN,589,INT32_MIN,590,INT32_MIN,591,INT32_MIN,592,INT32_MIN,593,INT32_MIN,594,INT32_MIN,595,INT32_MIN,596,INT32_MIN,597,INT32_MIN,598,INT32_MIN,599,INT32_MIN,600,INT32_MIN,601,INT32_MIN,602,INT32_MIN,603,INT32_MIN,604,INT32_MIN,605,INT32_MIN,606,INT32_MIN,607,INT32_MIN,608,INT32_MIN,609,INT32_MIN,610,INT32_MIN,611,INT32_MIN,612,INT32_MIN,613,INT32_MIN,614,INT32_MIN,615,INT32_MIN,616,INT32_MIN,617,INT32_MIN,618,INT32_MIN,619,INT32_MIN,620,INT32_MIN,621,INT32_MIN,622,INT32_MIN,623,INT32_MIN,624,INT32_MIN,625,INT32_MIN,626,INT32_MIN,627,INT32_MIN,628,INT32_MIN,629,INT32_MIN,630,INT32_MIN,631,INT32_MIN,632,INT32_MIN,633,INT32_MIN,634,INT32_MIN,635,INT32_MIN,636,INT32_MIN,637,INT32_MIN,638,INT32_MIN,639,INT32_MIN,640,INT32_MIN,641,INT32_MIN,642,INT32_MIN,643,INT32_MIN,644,INT32_MIN,645,INT32_MIN,646,INT32_MIN,647,INT32_MIN,648,INT32_MIN,649,INT32_MIN,650,INT32_MIN,651,INT32_MIN,652,INT32_MIN,653,INT32_MIN,654,INT32_MIN,655,INT32_MIN,656,INT32_MIN,657,INT32_MIN,658,INT32_MIN,659,INT32_MIN,660,INT32_MIN,661,INT32_MIN,662,INT32_MIN,663,INT32_MIN,664,INT32_MIN,665,INT32_MIN,666,INT32_MIN,667,INT32_MIN,668,INT32_MIN,669,INT32_MIN,670,INT32_MIN,671,INT32_MIN,672,INT32_MIN,673,INT32_MIN,674,INT32_MIN,675,INT32_MIN,676,INT32_MIN,677,INT32_MIN,678,INT32_MIN,679,INT32_MIN,680,INT32_MIN,681,INT32_MIN,682,INT32_MIN,683,INT32_MIN,684,INT32_MIN,685,INT32_MIN,686,INT32_MIN,687,INT32_MIN,688,INT32_MIN,689,INT32_MIN,690,INT32_MIN,691,INT32_MIN,692,INT32_MIN,693,INT32_MIN,694,INT32_MIN,695,INT32_MIN,696,INT32_MIN,697,INT32_MIN,698,INT32_MIN,699,INT32_MIN,700,INT32_MIN,701,INT32_MIN,702,INT32_MIN,703,INT32_MIN,704,INT32_MIN,705,INT32_MIN,706,INT32_MIN,707,INT32_MIN,708,INT32_MIN,709,INT32_MIN,710,INT32_MIN,711,INT32_MIN,712,INT32_MIN,713,INT32_MIN,714,INT32_MIN,715,INT32_MIN,716,INT32_MIN,717,INT32_MIN,718,INT32_MIN,719,INT32_MIN,720,INT32_MIN,721,INT32_MIN,722,INT32_MIN,723,INT32_MIN,724,INT32_MIN,725,INT32_MIN,726,INT32_MIN,727,INT32_MIN,728,INT32_MIN,729,INT32_MIN,730,INT32_MIN,731,INT32_MIN,732,INT32_MIN,733,INT32_MIN,734,INT32_MIN,735,INT32_MIN,736,INT32_MIN,737,INT32_MIN,738,INT32_MIN,739,INT32_MIN,740,INT32_MIN,741,INT32_MIN,742,INT32_MIN,743,INT32_MIN,744,INT32_MIN,745,INT32_MIN,746,INT32_MIN,747,INT32_MIN,748,INT32_MIN,749,INT32_MIN,750,INT32_MIN,751,INT32_MIN,752,INT32_MIN,753,INT32_MIN,754,INT32_MIN,755,INT32_MIN,756,INT32_MIN,757,INT32_MIN,758,INT32_MIN,759,INT32_MIN,760,INT32_MIN,761,INT32_MIN,762,INT32_MIN,763,INT32_MIN,764,INT32_MIN,765,INT32_MIN,766,INT32_MIN,767,INT32_MIN,768,INT32_MIN,769,INT32_MIN,770,INT32_MIN,771,INT32_MIN,772,INT32_MIN,773,INT32_MIN,774,INT32_MIN,775,INT32_MIN,776,INT32_MIN,777,INT32_MIN,778,INT32_MIN,779,INT32_MIN,780,INT32_MIN,781,INT32_MIN,782,INT32_MIN,783,INT32_MIN,784,INT32_MIN,785,INT32_MIN,786,INT32_MIN,787,INT32_MIN,788,INT32_MIN,789,INT32_MIN,790,INT32_MIN,791,INT32_MIN,792,INT32_MIN,793,INT32_MIN,794,INT32_MIN,795,INT32_MIN,796,INT32_MIN,797,INT32_MIN,798,INT32_MIN,799,INT32_MIN,800,INT32_MIN,801,INT32_MIN,802,INT32_MIN,803,INT32_MIN,804,INT32_MIN,805,INT32_MIN,806,INT32_MIN,807,INT32_MIN,808,INT32_MIN,809,INT32_MIN,810,INT32_MIN,811,INT32_MIN,812,INT32_MIN,813,INT32_MIN,814,INT32_MIN,815,INT32_MIN,816,INT32_MIN,817,INT32_MIN,818,INT32_MIN,819,INT32_MIN,820,INT32_MIN,821,INT32_MIN,822,INT32_MIN,823,INT32_MIN,824,INT32_MIN,825,INT32_MIN,826,INT32_MIN,827,INT32_MIN,828,INT32_MIN,829,INT32_MIN,830,INT32_MIN,831,INT32_MIN,832,INT32_MIN,833,INT32_MIN,834,INT32_MIN,835,INT32_MIN,836,INT32_MIN,837,INT32_MIN,838,INT32_MIN,839,INT32_MIN,840,INT32_MIN,841,INT32_MIN,842,INT32_MIN,843,INT32_MIN,844,INT32_MIN,845,INT32_MIN,846,INT32_MIN,847,INT32_MIN,848,INT32_MIN,849,INT32_MIN,850,INT32_MIN,851,INT32_MIN,852,INT32_MIN,853,INT32_MIN,854,INT32_MIN,855,INT32_MIN,856,INT32_MIN,857,INT32_MIN,858,INT32_MIN,859,INT32_MIN,860,INT32_MIN,861,INT32_MIN,862,INT32_MIN,863,INT32_MIN,864,INT32_MIN,865,INT32_MIN,866,INT32_MIN,867,INT32_MIN,868,INT32_MIN,869,INT32_MIN,870,INT32_MIN,871,INT32_MIN,872,INT32_MIN,873,INT32_MIN,874,INT32_MIN,875,INT32_MIN,876,INT32_MIN,877,INT32_MIN,878,INT32_MIN,879,INT32_MIN,880,INT32_MIN,881,INT32_MIN,882,INT32_MIN,883,INT32_MIN,884,INT32_MIN,885,INT32_MIN,886,INT32_MIN,887,INT32_MIN,888,INT32_MIN,889,INT32_MIN,890,INT32_MIN,891,INT32_MIN,892,INT32_MIN,893,INT32_MIN,894,INT32_MIN,895,INT32_MIN,896,INT32_MIN,897,INT32_MIN,898,INT32_MIN,899,INT32_MIN,900,INT32_MIN,901,INT32_MIN,902,INT32_MIN,903,INT32_MIN,904,INT32_MIN,905,INT32_MIN,906,INT32_MIN,907,INT32_MIN,908,INT32_MIN,909,INT32_MIN,910,INT32_MIN,911,INT32_MIN,912,INT32_MIN,913,INT32_MIN,914,INT32_MIN,915,INT32_MIN,916,INT32_MIN,917,INT32_MIN,918,INT32_MIN,919,INT32_MIN,920,INT32_MIN,921,INT32_MIN,922,INT32_MIN,923,INT32_MIN,924,INT32_MIN,925,INT32_MIN,926,INT32_MIN,927,INT32_MIN,928,INT32_MIN,929,INT32_MIN,930,INT32_MIN,931,INT32_MIN,932,INT32_MIN,933,INT32_MIN,934,INT32_MIN,935,INT32_MIN,936,INT32_MIN,937,INT32_MIN,938,INT32_MIN,939,INT32_MIN,940,INT32_MIN,941,INT32_MIN,942,INT32_MIN,943,INT32_MIN,944,INT32_MIN,945,INT32_MIN,946,INT32_MIN,947,INT32_MIN,948,INT32_MIN,949,INT32_MIN,950,INT32_MIN,951,INT32_MIN,952,INT32_MIN,953,INT32_MIN,954,INT32_MIN,955,INT32_MIN,956,INT32_MIN,957,INT32_MIN,958,INT32_MIN,959,INT32_MIN,960,INT32_MIN,961,INT32_MIN,962,INT32_MIN,963,INT32_MIN,964,INT32_MIN,965,INT32_MIN,966,INT32_MIN,967,INT32_MIN,968,INT32_MIN,969,INT32_MIN,970,INT32_MIN,971,INT32_MIN,972,INT32_MIN,973,INT32_MIN,974,INT32_MIN,975,INT32_MIN,976,INT32_MIN,977,INT32_MIN,978,INT32_MIN,979,INT32_MIN,980,INT32_MIN,981,INT32_MIN,982,INT32_MIN,983,INT32_MIN,984,INT32_MIN,985,INT32_MIN,986,INT32_MIN,987,INT32_MIN,988,INT32_MIN,989,INT32_MIN,990,INT32_MIN,991,INT32_MIN,992,INT32_MIN,993,INT32_MIN,994,INT32_MIN,995,INT32_MIN,996,INT32_MIN,997,INT32_MIN,998,INT32_MIN,999,INT32_MIN,1000};
    TreeNode* inputNode = generateTreeFromVector(inputVector);
    Codec s;

    //run
    auto serialized = s.serialize(inputNode);
    cout << serialized << endl;
    auto deserialized = s.deserialize(serialized);
    cout << s.serialize(deserialized) << endl;

    EXPECT_TRUE(*deserialized == *inputNode);
}
